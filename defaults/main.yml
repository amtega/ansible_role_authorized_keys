---
# Role default lower priority variables

# List of dicts with SSH authorized keys to configure. The dicts can have this
# attributes, with the same meaning that the ones expected by the ansible
# authorized_keys module:
#
#   - comment
#   - exclusive
#   - follow
#   - key
#   - key_options
#   - manage_dir
#   - path
#   - state
#   - user                            # Can be a list of strings
#   - validate_certs
#
# Additionally, you can use the following fields to control the behaviour of the
# role when it need to create the user home directory
#
#   - home_parent_dir_owner: <user>   # Owner of the user home parent directory
#   - home_parent_dir_group: <group>  # Group of the user home parent directory
#   - home_parent_dir_mode: <mode>    # Mode of the user home parent directory
#
# Sample:
#
# authorized_keys:
#   - user: charlie
#     state: present
#     key: "{{ lookup('file', '/home/charlie/.ssh/id_rsa.pub') }}"
#
#   - user: charlie
#     state: present
#     key: https://github.com/charlie.keys

authorized_keys: []

# Dictionary with the defaults options to use if no other ones are specified in
# the `authorized_keys` variable. The members of the dict are the same
# attributes that the ones expected by the ansible authorized_keys module

authorized_keys_defaults:
  home_parent_dir_owner: root
  home_parent_dir_group: root
  home_parent_dir_mode: "0711"

# Indicate `authorized_keys` must be loaded also from host variables. Any host
# variable that begins with "authorized_keys_*" and contains the necessary
# attributes will be loaded as an item to manage by the role. The variables must
# follow the structure detailed before for `authorized_keys`

authorized_keys_load_from_hostvars: no

# Hide sensitive information

authorized_keys_no_log: yes
